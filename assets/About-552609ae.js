import{_ as a,r,m as h,C as e,S as i,o as c,c as p,D as m}from"./index-1bde508c.js";const l={class:"pages-about"},d=m('<div data-v-9a82eecd>3번째 페이지</div><div class="hide-area" data-v-9a82eecd><p data-v-9a82eecd>보이지만 스크롤 하면 사라지는 친구</p><p class="target" data-v-9a82eecd> 보이지만 스크롤 하면 사라지는 친구의 기준점이 되는 친구 </p><p data-v-9a82eecd>보이지만 스크롤 하면 사라지는 친구</p></div><div style="height:400px;" data-v-9a82eecd></div><section class="section section-1" data-v-9a82eecd> Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. </section><section class="section section-2" data-v-9a82eecd> Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. </section><section class="section section-3" data-v-9a82eecd> Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. </section><section class="section section-4" data-v-9a82eecd> Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. Transition Vue offers two built-in components that can help work with transitions and animations in response to changing state: Transition for applying animations when an element or component is entering and leaving the DOM. This is covered on this page. TransitionGroup for applying animations when an element or component is inserted into, removed from, or moved within a v-for list. This is covered in the next chapter. Aside from these two components, we can also apply animations in Vue using other techniques such as toggling CSS classes or state-driven animations via style bindings. These additional techniques are covered in the Animation Techniques chapter. </section><div style="height:900px;" data-v-9a82eecd></div>',8),g=[d],v={__name:"About",setup(u){const t=r([]);return h(()=>{e.registerPlugin(i),e.to(".hide-area",{autoAlpha:0,scrollTrigger:{trigger:".hide-area",start:"top top+=100",end:"+=200",scrub:!0}}),document.querySelectorAll("section").forEach((n,s)=>{e.to(n,{autoAlpha:1,scrollTrigger:{trigger:n,start:"top bottom-=100",toggleActions:"play none none reverse"}}),i.create({trigger:n,id:s+1,start:"top center",end:()=>`+=${n.clientHeight+30}`,toggleActions:"play reverse none reverse",toggleClass:{targets:n,className:"is-active"}}),t.value.push(n)})}),(o,n)=>(c(),p("div",l,g))}},f=a(v,[["__scopeId","data-v-9a82eecd"]]);export{f as default};
